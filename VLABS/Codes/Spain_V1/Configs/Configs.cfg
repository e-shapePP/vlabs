[GENERAL]
# These directories are used at FR-Hes to treat raw data.
# There are only examples that users can put their own sections
# into the config file
#
# base path to which all other directories are relative to 
# str
datadir  = Data
# outdir is relative to datadir
# str
outdir   = Outdir


[DB1FILES]
# Metheorological data (str)

meteo_file   = \Rainfall\Metheorological_2016_2021.txt

# Here starts the configuration for post-processing data, assumed to be in the
# format defined by the ICOS precursor europe-flaxdata.eu:
# http://www.europe-fluxdata.eu/home/guidelines/how-to-submit-data/general-information


[POSTSWITCH]
# spike detection (Papale et al., Biogeoci 2006) (bool)
outlier   = True
# ustar filtering (Papale et al., Biogeoci 2006) (bool)
ustar        = False
# ustar filtering with constant umin. No complete yearly data
ustar_noyear = True
# flux partitioning (Reichstein et al., GCB 2005; Lasslop et al., GCB 2010) (bool)
partition = True
# gap filling (Reichstein et al., GCB 2005) (bool)
fill      = True
# error estimate of Eddy fluxes (Lasslop et al., Biogeosci 2008) (bool)
fluxerr   = False
# estimations odaily values
daily_values             = True
# climatological footprint 
climatological_footprint = True
# vegetation indices
vegetation_indices       = True 
# environmental variables from station
environmental_variables_station  = True 
# environmental variables from satellite
environmental_variables_satellite  = True 
# gpp and environmental variables from tower
tower_observations = True
#correlation_analysis
correlation_analysis = True
#correlation_analysis
correlation_analysis_simple = True
#Calibration_validation
calibration_validation = True


[POSTIO]
# can be comma separated list or single file (list-like, str)
#inputfile   = \NEE_\NEE_EU_format_2020_2021.txt
inputfile  = \NEE\NEE_EU_format_2020.txt, \NEE\NEE_EU_format_2021.txt

# see strftime documentation of Python's datetime module (str)
# https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior
timeformat  = %Y-%m-%d %H:%M:%S
#2020-09-30 12:30:00

# Delimter to use with pandas.read_csv. If None, Pythonâ€™s builtin sniffer tool is used (slow)
# https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html
# str
sep         = ,
# Line numbers to skip (0-indexed) or number of lines to skip (int) at the start of the file.
# https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html
# list-like, int
skiprows    = None
# values being NaN and undef will be ignored
# float
undef       = -9999.
# threshold of shortwave radiation for determining day/night. day is SW_IN > swthr
# float
swthr       = 20.
#10

# if empty, write will ask for output path using the name of this config file with the suffix .csv (str)
outputfile  = \GPP\GPP_corrections_with_flags.txt
# if True, set variable to undef where flagged in output (bool)
outundef    = False
# if True, add flag columns prepended with flag_ for each variable (bool)
outflagcols = False

[POSTMAD]
# spike / outlier detection, see help(hesseflux.madspikes) (int)
# scan window in days for spike detection
nscan = 13
#30
# fill window in days for spike detection (int)
nfill = 1
#1
# spike will be set for values above z absolute deviations (float)
z     = 7 
#7
# 0: mad on raw values; 1, 2: mad on first or second derivatives (int)
deriv = 2

[POSTUSTAR]
# ustar filtering, see help(hesseflux.ustarfilter)
# min ustar value. Papale et al. (Biogeosci 2006): 0.1 forest, 0.01 else (float)
ustarmin    = 0.14
# number of boostraps for determining uncertainty of ustar threshold. 1 = no bootstrap (int)
nboot       = 1
# significant difference between ustar class and mean of classes above (float)
plateaucrit = 0.95
# Seasonal analysis (bool)
seasonout = False
# Flag with ustar (bool)
applyustarflag = True

[POSTGAP]
# gap-filling with MDS, see help(hesseflux.gapfill) (float)
# max deviation of SW_IN
sw_dev  = 50.
# max deviation of TA (float)
ta_dev  = 2.5
# max deviation of VPD (float)
vpd_dev = 5.0
# avoid extrapolation in gaps longer than longgap days (int)
longgap = 60

[POSTPARTITION]
# partitioning, see help(hesseflux.nee2gpp) (bool)
# if True, set GPP=0 at night
nogppnight = True

[POSTVAR]
#Here labels of the variables can be defined 
carbonflux = FC_2

[CLIMATOLOGICAL]
#Properties flux tower 
#meters
altitude                        = 1                                   
#meters
latitude                        = 36.9985                        
#meters
longitude                       = -6.4345                        
#meters
canopy_height                   =  0.7         
#meters
displacement_height             =  0.2 
#0.11; Water = 0.001  #0 is unfeasible
roughness_lenght                = -999  
#meters
instrument_height_anenometer    =  3.95
#meters
#instrument_height_gas_analyzer =  3.95 + 0.08
instrument_height_gas_analyzer  =  4.03
#projection retrieved from QGIS format       
projection_site  = +proj=utm +zone=29 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs

[VI]
#Maximun cloud coverage in images 
max_cloud_coverage = 30
crs= EPSG:25829
ndviMask = -100
mndviMask = 0.05
